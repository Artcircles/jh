正常模式（按Esc或Ctrl+[进入） 左下角显示文件名或为空(NORMAL)
插入模式（按i键进入） 左下角显示--INSERT--
可视模式（不知道如何进入） 左下角显示--VISUAL--


******************************************************
**********vim编辑器---批量注释与反注释**************

方法一 块选择模式

---> 插入注释：
用v进入virtual模式

用上下键选中需要注释的行数
按Ctrl+v（win下面ctrl+q）进入列模式

按大写“I”进入插入模式，输入注释符“#”或者是"//"，然后立刻按下ESC（两下）


---> 取消注释：
Ctrl + v 进入块选择模式，选中你要删除的行首的注释符号，注意// 要选中两个，选好之后按d即可删除注释

方法二 替换命令

---> 批量注释：
使用下面命令在指定的行首添加注释：

:起始行号,结束行号s/^/注释符/g

---> 取消注释：
:起始行号,结束行号s/^注释符//g

实例演示：

在27 - 30行添加 // 注释

:27,30s#^#//#g


**********************************************
**********vim编辑器---查找与替换**************

----> 查找
在normal模式下按下/即可进入查找模式，输入要查找的字符串并按
下回车。 Vim会跳转到第一个匹配。按下n查找下一个，按下N查找上一个。


Vim查找支持正则表达式，例如/vim$匹配行尾的"vim"。 需要
查找特殊字符需要转义，例如/vim\$匹配"vim$"。

注意:
    查找回车应当用\n，而替换为回车应当用\r（相当于<CR>）。

*********************************************

---> 大小写敏感查找
在查找模式中加入\c表示大小写不敏感查找，\C表示大小写敏感查找。例如：

/foo\c
将会查找所有的"foo","FOO","Foo"等字符串。


*********************************************
---> 大小写敏感配置
Vim 默认采用大小写敏感的查找，为了方便我们常常将其配置为大小写不敏感：

" 设置默认进行大小写不敏感查找
set ignorecase
" 如果有一个大写字母，则切换到大小写敏感查找
set smartcase 
将上述设置粘贴到你的~/.vimrc，重新打开Vim即可生效。

*********************************************
---> 查找当前单词
在normal模式下按下*即可查找光标所在单词（word）， 要求每次出现的前后
为空白字符或标点符号。例如当前为foo， 可以匹配foo bar中的foo，但不可
匹配foobar中的foo。 这在查找函数名、变量名时非常有用。

按下g*即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即foo bar和foobar中的foo均可被匹配到。

*********************************************
---> 查找与替换
:s（substitute）命令用来查找和替换字符串。语法如下：

:{作用范围}s/{目标}/{替换}/{替换标志}
例如:%s/foo/bar/g会在全局范围(%)查找foo并替换为bar，所有出现都会被替换（g）。

*********************************************
---> 作用范围
作用范围分为当前行、全文、选区等等。

当前行：

:s/foo/bar/g
全文：

:%s/foo/bar/g
选区，在Visual模式下选择区域后输入:，Vim即可自动补全为 :'<,'>。

:'<,'>s/foo/bar/g
2-11行：

:5,12s/foo/bar/g
当前行.与接下来两行+2：

:.,+2s/foo/bar/g

*********************************************
---> 替换标志
上文中命令结尾的g即是替换标志之一，表示全局global替换（即替换目标的所有出现）。 
还有很多其他有用的替换标志：

空替换标志表示只替换从光标位置开始，目标的第一次出现：

:%s/foo/bar
i表示大小写不敏感查找，I表示大小写敏感：

:%s/foo/bar/i
# 等效于模式中的\c（不敏感）或\C（敏感）
:%s/foo\c/bar
c表示需要确认，例如全局查找"foo"替换为"bar"并且需要确认：

:%s/foo/bar/gc
回车后Vim会将光标移动到每一次"foo"出现的位置，并提示

replace with bar (y/n/a/q/l/^E/^Y)?
按下y表示替换，n表示不替换，a表示替换所有，q表示退出查找模式， l表示替
换当前位置并退出。^E与^Y是光标移动快捷键，参考： Vim中如何快速进行光标移动。



***********************************************
*****vim编辑器---删除/剪切 字符*******
---> --NORMAL MODE--
x        删除/剪切至当前光标下的字符
d        删除/剪切选定块到缓冲区；
dd       删除/剪切当前行。
dw       删除/剪切至光标之后的单词剩余部分。
daw/bdw  删除/剪切光标所在的单词。
d^       删除/剪切至行首 
d$       删除/剪切至光标之后的该行剩余部分。
dG       删除/剪切至档尾  
c        功能和d相同，区别在于完成删除操作后进入INSERT MODE
cc       也是删除当前行，然后进入INSERT MODE
删除首行的第一个字母　：　:%s/^.//g　　貌似用键盘的 x 字母删除


***********************************************
*****vim编辑器---复制粘贴命令*******
--> 复制
y    在使用v模式选定了某一块的时候，复制选定块到缓冲区用； 
yy   复制整行（nyy或者yny ，复制n行，n为数字）； 
y^   复制当前到行头的内容； 
y$   复制当前到行尾的内容； 
yw   复制一个word （nyw或者ynw，复制n个word，n为数字）； 
yG   复制至档尾（nyG或者ynG，复制到第n行，例如1yG或者y1G，复制到档尾）
--> 粘贴
粘贴的命令式p，即put(放下)
p    小写p代表贴至游标后(下) 
P    大写P代表贴至游标前(上) 
整行的复制粘贴在游标的上（下）一行，非整行的复制则是粘贴在游标的前（后）

注： 
     在正则表达式中，^表示匹配字符串的开始位置，$表示匹配字符串的结束位置。
